#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4
#define MED 5
#define LOC 6

/*                KEY POSITIONS
        $row * NUMBER_OF_COLUMNS + $column

╭────────────────────────╮ ╭────────────────────────╮
│  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
│ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
│ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
            ╰────────────╯ ╰────────────╯
*/


/ {
    behaviors {
        cht: cmd_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CMD_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <2 3 4 5 6 7 8 9 10 11 14 15 16 18 19 20 21 22 23 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        bht: base_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BASE_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &none &kp Q       &kp W       &kp E        &kp R         &kp T       &kp Y       &kp U        &kp I        &kp O       &kp P          &none
    &none &cht LGUI A &bht LALT S &bht LCTRL D &bht LSHFT F  &kp G       &kp H       &bht RSHFT J &bht RCTRL K &bht RALT L &bht RGUI SEMI &none
    &none &kp Z       &kp X       &kp C        &kp V         &kp B       &kp N       &kp M        &kp COMMA    &kp DOT     &kp FSLH       &none
                                  &lt MED ESC  &lt NAV SPACE &kp TAB     &lt SYM RET &lt NUM BSPC &lt FUN DEL
            >;
        };

        nav_layer {
            bindings = <
    &none &none    &none    &none     &none     &none     &none    &none    &none   &none     &none &none
    &none &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none     &kp LEFT &kp DOWN &kp UP  &kp RIGHT &none &none
    &none &none    &none    &none     &none     &none     &none    &none    &none   &none     &none &none
                            &none     &none     &none     &kp RET  &kp BSPC &kp DEL
            >;
        };

        num_layer {
            bindings = <
    &none &kp LBKT  &kp N7 &kp N8  &kp N9 &kp RBKT       &none &none     &none     &none    &none    &none
    &none &kp SQT   &kp N4 &kp N5  &kp N6 &kp EQUAL      &none &kp RSHFT &kp RCTRL &kp RALT &kp RGUI &none
    &none &kp GRAVE &kp N1 &kp N2  &kp N3 &kp BSLH       &none &none     &none     &none    &none    &none
                           &kp DOT &kp N0 &kp MINUS      &none &none     &none
            >;
        };

        sym_layer {
            bindings = <
    &none &kp LBRC  &kp AMPS &kp ASTRK &kp LPAR  &kp RBRC   &none &none     &none     &none    &none    &none
    &none &kp DQT   &kp DLLR &kp PRCNT &kp CARET &kp PLUS   &none &kp RSHFT &kp RCTRL &kp RALT &kp RGUI &none
    &none &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE   &none &none     &none     &none    &none    &none
                             &kp LPAR  &kp RPAR  &kp UNDER  &none &none     &none
            >;
        };

        fun_layer {
            bindings = <
    &none &kp F12 &kp F7 &kp F8    &kp F9    &kp PSCRN         &none &none     &none     &none    &none    &none
    &none &kp F11 &kp F4 &kp F5    &kp F6    &kp SLCK          &none &kp RSHFT &kp RCTRL &kp RALT &kp RGUI &none
    &none &kp F10 &kp F1 &kp F2    &kp F3    &kp PAUSE_BREAK   &none &none     &none     &none    &tog LOC &none
                         &kp K_APP &kp SPACE &kp TAB           &none &none     &none
            >;
        };

        med_layer {
            bindings = <
    &none &none        &none        &none        &none        &none   &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_DN &kp C_BRI_UP &none
    &none &bt BT_CLR   &none        &none        &none        &none   &kp C_PREV &kp C_PP     &kp C_NEXT   &none        &none        &none
    &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none   &none      &none        &none        &none        &none        &none
                                    &none        &none        &none   &none      &none        &none
            >;
        };

        loc_layer {
            bindings = <
    &none &none &none &none &none &none   &none &none &none &none &none &none
    &none &none &none &none &none &none   &none &none &none &none &none &none
    &none &none &none &none &none &none   &none &none &none &none &none &none
                      &none &none &none   &none &none &none
            >;
        };
    };
};
